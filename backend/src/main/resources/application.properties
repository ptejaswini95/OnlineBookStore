<<<<<<< HEAD
spring.application.name=OnlineBookStore

# Server Configuration
server.port=8081

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/bookstore
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.default_schema=bookstore
spring.jpa.properties.hibernate.search.schema_management.strategy=create

# Data Initialization
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:data.sql

# JWT Configuration
jwt.secret=9a4f2c8d3b7a1e6f45c8a0b3f267d8b1d4e6f3c8a9d2b5f8e3a9c6b1d4f7e2a5abcd1234ef567890
jwt.expiration=86400000

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.com.bookstore=DEBUG

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Spring Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.basic.enabled=false

# DevTools Configuration
spring.devtools.restart.enabled=false
=======
# Application name
spring.application.name=bookstore-api

# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/bookstore
spring.datasource.username=postgres
spring.datasource.password=postgres

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Server configuration
server.port=8080
server.servlet.context-path=/api

# JWT configuration
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
jwt.expiration=86400000

# Actuator configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}

# Logging configuration
logging.level.root=INFO
logging.level.com.bookstore=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO

# CORS configuration
spring.web.cors.allowed-origins=http://localhost:80,http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Requested-With
spring.web.cors.allow-credentials=true 
>>>>>>> origin/main
